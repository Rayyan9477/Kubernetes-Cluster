name: Kubernetes Deployment Status

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - master
    paths:
      - 'k8s/**'
      - '.github/workflows/k8s-deployment-status.yml'

jobs:
  capture-deployment-status:
    runs-on: ubuntu-latest
    env:
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker --memory=2048 --cpus=2
          minikube status
          kubectl version --client
          
      - name: Configure Docker credentials
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Create Screenshot Directories
        run: |
          mkdir -p documentation/screenshots/{deployment-process,verification,application-logs}

      - name: Deploy Namespace and Capture Status
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl get namespaces > documentation/screenshots/deployment-process/namespace-creation.txt

      - name: Deploy ConfigMap and Capture Status
        run: |
          envsubst < k8s/configmap.yaml | kubectl apply -f -
          kubectl get configmaps -n mern-app > documentation/screenshots/deployment-process/configmap-deployment.txt
          kubectl wait --for=condition=Available --timeout=60s configmap/mern-app-config -n mern-app || true

      - name: Deploy Secrets and Capture Status
        run: |
          kubectl apply -f k8s/secrets.yaml
          kubectl get secrets -n mern-app > documentation/screenshots/deployment-process/secrets-deployment.txt

      - name: Deploy MongoDB and Capture Status
        run: |
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/mongodb-service.yaml
          kubectl get deployments,pods,svc -n mern-app -l app=mongodb > documentation/screenshots/deployment-process/mongodb-deployment.txt

      - name: Deploy Application and Capture Status
        run: |
          envsubst < k8s/deployment.yaml | kubectl apply -f -
          envsubst < k8s/service.yaml | kubectl apply -f -
          
          # Wait for deployment to be ready
          kubectl wait --for=condition=Available --timeout=300s deployment/mern-auth-app -n mern-app
          
          # Get deployment status
          kubectl get deployments,pods,svc -n mern-app -l app=mern-auth-app > documentation/screenshots/deployment-process/app-deployment.txt
          
          # Verify health endpoint
          POD_NAME=$(kubectl get pods -n mern-app -l app=mern-auth-app -o jsonpath="{.items[0].metadata.name}")
          kubectl wait --for=condition=Ready pod/$POD_NAME -n mern-app --timeout=300s
          
          # Forward port and check health
          kubectl port-forward -n mern-app $POD_NAME 5000:5000 &
          sleep 5
          curl -s http://localhost:5000/api/health > documentation/screenshots/verification/health-check.txt || true
          pkill -f "port-forward"

      - name: Capture Verification Status
        run: |
          echo "Pod Status:" > documentation/screenshots/verification/pods-status.txt
          kubectl get pods -n mern-app -o wide >> documentation/screenshots/verification/pods-status.txt
          
          echo "Service Status:" > documentation/screenshots/verification/services-status.txt
          kubectl get services -n mern-app -o wide >> documentation/screenshots/verification/services-status.txt
          
          echo "Deployment Status:" > documentation/screenshots/verification/deployments-status.txt
          kubectl get deployments -n mern-app -o wide >> documentation/screenshots/verification/deployments-status.txt
          
          echo "Application URL:" > documentation/screenshots/verification/app-url.txt
          minikube service mern-auth-service -n mern-app --url >> documentation/screenshots/verification/app-url.txt

      - name: Capture Application Logs
        run: |
          echo "MongoDB Logs:" > documentation/screenshots/application-logs/mongodb-logs.txt
          kubectl logs -l app=mongodb -n mern-app --tail=100 >> documentation/screenshots/application-logs/mongodb-logs.txt
          
          echo "Application Logs:" > documentation/screenshots/application-logs/app-logs.txt
          kubectl logs -l app=mern-auth-app -n mern-app --tail=100 >> documentation/screenshots/application-logs/app-logs.txt

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add documentation/screenshots
          git commit -m "Update deployment status screenshots [skip ci]" || echo "No changes to commit"
          git push
