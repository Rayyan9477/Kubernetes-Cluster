name: MERN Auth CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
  MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  MONGODB_DATABASE: mern-auth
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  NODE_ENV: production
  PORT: 5000
  FRONTEND_URL: http://localhost:30007
  VITE_BACKEND_URL: http://localhost:5000
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install Backend Dependencies
      run: |
        cd app/backend
        npm install
        
    - name: Install Frontend Dependencies
      run: |
        cd app/frontend
        npm install
        
    - name: Build Frontend
      run: |
        cd app/frontend
        npm run build
        
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
        
    - name: Build and Push Backend Docker Image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/mern-auth-backend:latest ./app/backend
        docker push ${{ env.DOCKER_USERNAME }}/mern-auth-backend:latest
        
    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/mern-auth-frontend:latest ./app/frontend
        docker push ${{ env.DOCKER_USERNAME }}/mern-auth-frontend:latest
        
    - name: Set up Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube start --driver=docker
        
    - name: Deploy to Kubernetes
      run: |
        # Create env-config.sh with environment variables
        echo "export MONGODB_USERNAME='${{ env.MONGODB_USERNAME }}'" > env-config.sh
        echo "export MONGODB_PASSWORD='${{ env.MONGODB_PASSWORD }}'" >> env-config.sh
        echo "export JWT_SECRET='${{ env.JWT_SECRET }}'" >> env-config.sh
        echo "export NODE_ENV='${{ env.NODE_ENV }}'" >> env-config.sh
        echo "export PORT='${{ env.PORT }}'" >> env-config.sh
        echo "export FRONTEND_URL='${{ env.FRONTEND_URL }}'" >> env-config.sh
        echo "export VITE_BACKEND_URL='${{ env.VITE_BACKEND_URL }}'" >> env-config.sh
        
        # Source the environment variables
        source env-config.sh
        
        # Apply Kubernetes configurations
        kubectl apply -f k8s/namespace.yaml
        envsubst < k8s/configmap.yaml | kubectl apply -f -
        envsubst < k8s/secrets.yaml | kubectl apply -f -
        kubectl apply -f k8s/mongodb-deployment.yaml
        kubectl apply -f k8s/mongodb-service.yaml
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        kubectl apply -f k8s/service.yaml
        
        # Wait for deployments to be ready
        kubectl wait --namespace=mern-app --for=condition=available --timeout=300s deployment/mern-auth-app
        kubectl wait --namespace=mern-app --for=condition=available --timeout=300s deployment/mongodb
        
    - name: Verify Deployment
      run: |
        echo "Verifying deployments..."
        kubectl get pods -n mern-app
        kubectl get services -n mern-app
        minikube service mern-auth-service -n mern-app --url
        
    - name: Run Health Check
      run: |
        SERVICE_URL=$(minikube service mern-auth-service -n mern-app --url)
        echo "Waiting for service to be ready..."
        sleep 30  # Give the service some time to stabilize
        curl -f ${SERVICE_URL}/api/users/health || exit 1
        
    - name: Clean up
      if: always()
      run: |
        rm -f env-config.sh
      run: |
        kubectl get all -n mern-app
        kubectl get pods -n mern-app
